---
Name: hpe-firmware-flash-list
Description: HPE Firmware Flash From List
RequiredParams:
  - skip-flash
  - flash-list
Templates:
  - Name: hpe-firmware-flash-list
    Contents: |
      #!/usr/bin/env bash

      {{ template "setup.tmpl" . }}

      function clean_curl() {
          local _src=$1
          local _dest=$2

          echo "Downloading $_src"
          curl -k -o $_dest $_src
          if [[ $? != 0 ]] ; then
              xiterr 1 "Failed to download $_dest from $_src"
          fi
      }

      skip_flash="{{.Param "skip-flash"}}"
      if [[ $skip_flash = true ]]; then
          echo "Skipping all flash operations due to skip-flash being true"
          exit 0
      fi

      if ! grep -q 'sledgehammer\.iso' /proc/cmdline; then
          echo "System not in Sledgehammer, exiting"
          exit 0
      fi

      want_reboot=no
      failed=no
      {{ range $index, $elem := .Param "flash-list" }}
        FILENAME="file.{{$index}}"
        {{ if $elem.Force }}
        FORCE="-f"
        {{ else }}
        FORCE=
        {{ end }}
        {{ if $.Param "flash-list-force" }}
        FORCE="-f"
        {{ end }}

        {{ if hasPrefix "http" $elem.File }}
        clean_curl "{{$elem.File}}" "$FILENAME"
        {{ else }}
        clean_curl "{{$.ProvisionerURL}}/{{$elem.File}}" "$FILENAME"
        {{ end }}

        # Check to see if RPM is already installed.
        RPMNAME=$(basename {{$elem.File}} | sed "s/.rpm//")
        if ! rpm -q ${RPMNAME} 2>/dev/null >/dev/null ; then
          rpm -ivh $FILENAME
        fi
        # Find SETUP command
        SETUP=$(rpm -ql $RPMNAME | grep '/setup$')
        if [[ "$SETUP" = "" ]] ; then
          SETUP=$(rpm -ql $RPMNAME | grep '/hpsetup$')
        fi
        # One day make this an argument
        TPMARG=""
        if [[ "$RPMNAME" =~ ^firmware-system ]] ; then
          TPMARG="--tpmbypass"
        fi
        if [[ "$RPMNAME" =~ ^firmware-ilo ]] ; then
          TPMARG="--tpmbypass"
        fi
        cd $(dirname $SETUP)
        if [[ "$RPMNAME" =~ ^firmware-nic-mellanox ]] ; then
          $SETUP -s ${FORCE} |& tee $FILENAME.log || case $? in
            0)
              echo "Installed successfully - no reboot required";;
            1)
              echo "Nothing to do";;
            *)
              echo "$SETUP returned $?"
              failed=yes;;
          esac
        else
          $SETUP -s -g ${TPMARG} ${FORCE} |& tee $FILENAME.log || case $? in
            0)
              echo "Installed successfully - no reboot required";;
            1)
              echo "Installed successfully - reboot required"
              want_reboot=yes;;
            2)
              echo "Nothing to do - at current level";;
            3)
              echo "Nothing to do - current level or no matching hardware";;
            4)
              echo "Nothing to do - matching hardware doesn't have firmware";;
            5)
              echo "Nothing to do - user interrupted the install";;
            6)
              echo "Nothing to do - hardware disabled";;
            7)
              echo "A failure has occurred."
              failed=yes;;
            *)
              echo "$SETUP returned $?"
              failed=yes;;
          esac
        fi
        cd -
      {{ end }}

      if [[ $want_reboot = yes ]]; then
          echo "Need reboot - start rebooting"
          exit_incomplete_reboot
      fi

      if [[ $failed = yes ]]; then
          echo "Something failed - error"
          exit 1
      fi

      echo "Nothing else to do and complete"
      drpcli machines set "$RS_UUID" param skip-flash to true
      exit 0
