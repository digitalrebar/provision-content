
###
#   Sets a given parameter to a given value on a Machine object.
###
function cl_set_parameter() {
  local _parameter="$1"
  local _value="$2"

  echo "Set $_parameter on the machine"
  drpcli machines set $RS_UUID param "$_parameter" to "$_value" >/dev/null
}

function set_parameter() {
  cl_set_parameter "$1" "$2"
}

###
#  Adds a given ARGv1 profile to the Machine object
###
function cl_add_profile() {
  local _profile="$1"

  if drpcli profiles exists "$_profile"
  then
  if drpcli machines show $RS_UUID | jq -r '.Profiles' | grep -q "\"$_profile\""
  then
    echo "Profile ('$_profile') already exists on Machine - no action taken."
  else
    echo "Profile ('$_profile') added to machine."
    drpcli machines addprofile $RS_UUID "$_profile" >/dev/null
  fi
  else
    echo "Requested profile ('$_profile') does not exist."
    exit 1
  fi
}

function add_profile() {
  cl_add_profile "$1"
}

###
#  Changes the Machine workflow to ARGv1 specified workflow
###
function cl_change_workflow() {
  local _wf="$1"

  if drpcli workflows exists "$_wf"
  then
    echo "Workflow ('$_wf') set on machine."
    drpcli machines update $RS_UUID "{ \"Workflow\": \"$_wf\" }" >/dev/null
  else
    echo "Requested workflow ('$_wf') does not exist."
    exit 1
  fi
}

function change_workflow() {
  cl_change_workflow "$1"
}

# extends classifier to process parameter into a profile
function cl_process_param_to_profile() {
  local _name=$1
  local _pname=${_name/\//-}
  local _fail=$2

  # Find the application params and remove them.
  drpcli machines show $RS_UUID --slim "Params,Meta" | \
    jq "del(.Profiles[] | select(.|test(\"${_pname}-\")))" | \
    drpcli machines update $RS_UUID - >/dev/null

  UA=$(drpcli machines get $RS_UUID param $_name --aggregate | jq -r .)
  UA=${UA// /_}
  _profile="${_pname}-${UA}"
  if drpcli profiles exists "$_profile"
  then
    if drpcli machines show $RS_UUID | jq -r '.Profiles' | grep -q "\"$_profile\""
    then
      echo "Profile ('$_profile') already exists on Machine - no action taken."
    else
      drpcli machines addprofile $RS_UUID "$_profile" >/dev/null
    fi
  else
    echo "Requested profile ('$_profile') does not exist.  Not adding."
    if [[ "$_fail" ]] ; then
      exit 1
    fi
  fi
}

# extends classifier to process parameter into a profile
function cl_process_params_to_profile() {
  local _prefix="${1}"
  local _fullname="$_prefix"
  shift

  while (( $# != 0 )) ; do
    local _UA
    _UA=$(drpcli machines get $RS_UUID param $1 --aggregate | jq -r .)
    _UA=${_UA// /_}

    _fullname+="-$_UA"
    shift
  done

  if drpcli profiles exists "$_fullname"
  then
    # Find the application params and remove them.
    drpcli machines show $RS_UUID --slim "Params,Meta" | \
    jq "del(.Profiles[] | select(.|test(\"${_prefix}-\")))" | \
      drpcli machines update $RS_UUID - >/dev/null

    if drpcli machines show $RS_UUID | jq -r '.Profiles' | grep -q "\"$_fullname\""
    then
      echo "Profile ('$_fullname') already exists on Machine - no action taken."
    else
      drpcli machines addprofile $RS_UUID "$_fullname" >/dev/null
    fi
  else
    echo "Requested profile ('$_fullname') does not exist.  Not adding."
  fi
}
