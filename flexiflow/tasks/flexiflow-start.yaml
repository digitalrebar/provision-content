---
Name: "flexiflow-start"
Description: "Start a flexiflow run"
Documentation: |
  This task begins the FlexiFlow stage.  No other tasks should preceed it on
  the stage, and the only other task that should follow is the ``flexiflow-stop``
  task.

  Tasks will be dynamically injected in to the task list after this task, if they
  have been specified by the appropriate control Params.

Meta:
  color: "purple"
  icon: "magic"
  title: "RackN Content"
  feature-flags: "sane-exit-codes"
Templates:
- Name: "flexiflow_start.sh"
  Meta:
    OS: "linux,darwin"
  Contents: |
    #!/usr/bin/env bash
    # Copyright RackN, 2019
    set -e
    {{ template "setup.tmpl" . }}

    {{ $errmsg := "" -}}
    {{ $ct := add .Machine.CurrentTask 1 -}}
    {{ $oldtasks := .Machine.Tasks -}}
    {{ $tasks := slice $oldtasks 0 $ct -}}
    {{ if eq (.ParamExists "flexiflow/list-parameter") false -}}
    {{   $errmsg = "flexiflow/list-parameter is not specified" -}}
    {{ end -}}
    {{ $lp := .Param "flexiflow/list-parameter" -}}
    {{ if eq (.ParamExists $lp) false -}}
    {{   $errmsg = cat "!!! flexiflow/list-parameter is " $lp " and it does not exist." -}}
    {{ else -}}
    {{   $newtasks := .ComposeParam $lp -}}
    {{   $seestop := false -}}
    {{   $stopindex := 0 -}}
    {{   range $index, $taskname := (slice $oldtasks $ct) -}}
    {{     if and (eq $taskname "flexiflow-stop") (not $seestop) -}}
    {{       $stopindex = add $ct $index -}}
    {{       $seestop = true -}}
    {{     end -}}
    {{   end -}}
    {{   $tasks = concat $tasks $newtasks -}}
    {{   $tasks = concat $tasks (slice $oldtasks $stopindex) -}}
    {{ end -}}

    {{ if eq $errmsg "" -}}
    drpcli machines update $RS_UUID '{ "Tasks": {{toJson $tasks }} }' >/dev/null
    exit 0
    {{ else -}}
    echo '{{$errmsg}}'
    exit 1
    {{ end -}}
- Name: "flexiflow_start.ps1"
  Meta:
    OS: "windows"
  Contents: |
    Write-Host "Flexiflow start not implemented for windows"
    exit 0
- Name: "flexiflow_start-esxi.sh"
  Meta:
    OS: "esxi"
  Contents: |
    #!/usr/bin/python
    # python3 version

    {{ $errmsg := "" -}}
    {{ $ct := add .Machine.CurrentTask 1 -}}
    {{ $oldtasks := .Machine.Tasks -}}
    {{ $tasks := slice $oldtasks 0 $ct -}}
    {{ if eq (.ParamExists "flexiflow/list-parameter") false -}}
    {{   $errmsg = "flexiflow/list-parameter is not specified" -}}
    {{ end -}}
    {{ $lp := .Param "flexiflow/list-parameter" -}}
    {{ if eq (.ParamExists $lp) false -}}
    {{   $errmsg = cat "!!! flexiflow/list-parameter is " $lp " and it does not exist." -}}
    {{ else -}}
    {{   $newtasks := .ComposeParam $lp -}}
    {{   $seestop := false -}}
    {{   $stopindex := 0 -}}
    {{   range $index, $taskname := (slice $oldtasks $ct) -}}
    {{     if and (eq $taskname "flexiflow-stop") (not $seestop) -}}
    {{       $stopindex = add $ct $index -}}
    {{       $seestop = true -}}
    {{     end -}}
    {{   end -}}
    {{   $tasks = concat $tasks $newtasks -}}
    {{   $tasks = concat $tasks (slice $oldtasks $stopindex) -}}
    {{ end -}}

    {{ if eq $errmsg "" -}}
    import os, urllib, urllib.request, socket, ssl, time
    url = '{{.ApiURL}}/api/v3/machines/{{.Machine.UUID}}'

    print('>>> FlexiFlow list  parameter set  to:  {{$lp}}')

    patch = b'''
    [
      {"op":"replace","path":"/Tasks","value":{{toJson $tasks}}}
    ]
    '''
    req = urllib.request.Request(url, method='PATCH',data=patch)
    req.add_header('Content-Type', 'application/json')
    req.add_header('Authorization','Bearer {{.GenerateInfiniteToken}}')
    urllib.request.urlopen(req,context=ssl.SSLContext(ssl.PROTOCOL_SSLv23))
    {{ else -}}
    print '{{$errmsg}}'
    exit(1)
    {{ end -}}
