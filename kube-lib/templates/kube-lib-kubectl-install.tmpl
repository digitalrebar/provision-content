#!/usr/bin/env bash
# kubectl install
# Copyright RackN 2020

{{ template "download-tools.tmpl" . }}

echo "--- starting shared kubectl install template ---"

export KUBECONFIG="./kube.config"
if [[ -f $KUBECONFIG ]] ; then
  echo "  verified $KUBECONFIG exists"
else
  echo "ERROR: calling Task MUST create $KUBECONFIG file"
  exit 1
fi

echo "Checking kubectl version"
if kubectl version ; then
  echo "  skipping install: kubectl detected"
else
  INSTALL_DIR=/usr/bin
  BINARIES="$INSTALL_DIR/kubectl"

  echo "  not detected...download $BINARIES based on kube-lib/kubectl-version"
  {{ $cachesource := "kube-lib/kubectl-version" }}
  OS="linux"
  ARCH="{{ .Machine.Arch }}"
  {{ $arch := list "linux" .Machine.Arch | join "-" }}
  {{ $file := .Param $cachesource }}
  {{ $source := get $file $arch }}
  drp_cache "{{ get $file "name" }}" "{{ get $file "version" }}" "$OS" "$ARCH" "{{ get $source "url" }}" "{{ get $source "sha256sum" }}" "{{ get $source "explode" }}"
  chmod +x "{{ get $file "name" }}"
  mv "{{ get $file "name" }}" $BINARIES
  echo "  verify kubectl version"
  kubectl version
fi

echo "--- end shared kubectl install template ---"