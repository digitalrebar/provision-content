#!/usr/local/bin/env bash
# v4.6 Cluster Pattern
#
###
#  This is a BASH script snippet intended to be run inside other BASH templates.
#  It assumed you are also running setup.tmpl
#
#
#  To use this in other templates, simply specify:
#
#         \{\{template "cluster-utilities.tmpl" .\}\}
#
#  without the backslashes.
###

echo "=== CLUSTER UTILITIES CODE START ==="

cluster_wait_for_variable() {
  local varname=$1
  local var=$(get_param "$varname" | jq -r .)
  local sleep_time=1
  local timer_count=0
  local timer_expire=600

  while [[ $var == null ]] ; do
    sleep $sleep_time
    var=$(get_param "$varname" | jq -r .)
    (( timer_count = timer_count + sleep_time ))
    [[ $timer_count -ge $timer_expire ]] && xiterr 1 "timer expired ($timer_expire seconds) in loop ('${FUNCNAME[0]}')"
  done
  echo $var
}

cluster_wait_for_workflow_complete() {
  local timer_count=0
  local timer_expire=1200

  echo "=== START: CLUSTER WAIT LOOP ==="
  while [[ $(drpcli machines count Uuid Eq $RS_UUID Runnable Eq true) -gt 0 ]]; do
    count=$(drpcli machines count WorkflowComplete Eq false cluster/manager Eq false {{.Param "cluster/filter"}})
    if [[ $count -gt 0 ]]; then
      echo "  $timer_count of $timer_expire: we still have $count running machines."
      (( timer_count = timer_count + count ))
      [[ $timer_count -ge $timer_expire ]] && xiterr 1 "timer expired ($timer_expire seconds) in loop ('${FUNCNAME[0]}')"
      sleep $count
    else
      echo "  all cluster machines complete"
      break
    fi
  done
  echo "=== END: CLUSTER WAIT LOOP ==="
}


{{ if .ParamExists "cluster/profile" }}
CLUSTER_PROFILE={{.Param "cluster/profile"}}
PROFILE_TOKEN={{.GenerateProfileToken (.Param "cluster/profile") 7200}}
echo "  Cluster Profile is $CLUSTER_PROFILE"
{{ else }}
echo "  WARNING: no cluster profile defined!  Run cluster-initialize task."
{{ end }}

echo "=== CLUSTER UTILITIES CODE END ==="