---
Name: systemd-networkd-bootif-only
Description: Forces only the Boot Interface to be active on Photon.
Documentation: |
  If the Param ``systemd-networkd-bootif-only`` is set to ``true``,
  then the current booted NIC will be left enabled, and all other
  NICs will be forced to be ignored (unmanaged).

  This may be necessary in some environments where the system has
  multiple NICs on the same Layer 2 network, allowing them to all
  receive IP address assignments via DHCP, causing confusion to
  the network stack.
Meta:
  color: purple
  feature-flags: sane-exit-codes
  icon: cogs
  title: RackN
RequiredParams:
  - systemd-networkd-bootif-only
OptionalParams: []
Templates:
  - Name: systemd-network-bootif-only
    Contents: |
      #!/usr/bin/env bash
      # Force only the Boot Interface to be active for systemd networkd

      # NOTE:  Photon OS does not install 'awk' by default.

      {{ if eq (.Param "systemd-networkd-bootif-only") false -}}
      echo ""
      echo ">>> SystemD NetworkD param override not set, leaving network config"
      echo ">>> in product default mode.  Exiting from task."
      echo ""
      exit 0
      {{ end -}}

      MAC=$(echo {{.Param "last-boot-macaddr"}} | tr '-' ':' | tr '[:upper:]' '[:lower:]')
      NF=$(echo "$MAC" | tr ":" " " | wc -w)
      [[ "$NF" == "7" ]] && MAC=$(echo "$MAC" | cut -d ":" -f 2-7)
      CUR_IF=$(ip -br link | grep " $MAC " | cut -d " " -f1)

      if [[ -z "$MAC" ]]
      then
        echo "FATAL:  Did not find MAC address - is 'last-boot-macaddr' populated on Machine object in DRP?"
        echo "       Interface information:"
        ip -br link
        echo ""
        exit 1
      fi

      if [[ -z "$CUR_IF" ]]
      then
        echo "FATAL: Did not correlate MAC '$MAC' to an interface on the system."
        echo "       Interface information:"
        ip -br link
        echo ""
        exit 1
      fi

      echo ""
      echo "MODIFYING system network configuration to only enable Boot Interface"
      echo ""
      echo ">>>          Booting MAC address:  $MAC"
      echo ">>> Current boot interface found:  $CUR_IF"
      echo ""

      NET_FILE=/etc/systemd/network/99-dhcp-en.network

      if [[ -r "$NET_FILE" ]]
      then
        echo ">>> Modifying '$NET_FILE' to only configure '$CUR_IF'."
        sed -i 's/^\(Name=\).*$/\1'${CUR_IF}'/' $NET_FILE
        NICS=$(ip -br link | egrep -v "^lo|^$CUR_IF" | cut -d " " -f1)
        for NIC in $NICS
        do
          echo ">>> Setting NIC '$NIC' to down state..."
          ip link set $NIC down
          ip -br link show $NIC
        done
      else
        echo ">> NOTICE:  NO '$NET_FILE' found ... no actions performed."
        D=$(dirname $NET_FILE)
        echo ">>          Directory contains:"
        ls -la $D
        echo ""
        exit 1
      fi

      echo ">>> Complerted."
      echo ""
