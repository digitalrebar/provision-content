---
Name: "cloud-site-destroy"
Description: "Cleanup Edge Site for Multi-Site Manager"
Documentation: |
  Relies on Cloud-Decomission
  Checks to ensure no machines are orphaned before decommissioning
ExtraClaims:
  - scope: "machines"
    action: "*"
    specific: "*"
  - scope: "endpoints"
    action: "*"
    specific: "*"
Templates:
  - Contents: |-
      #!/bin/bash
      # RackN Copyright 2021

      set -e
      {{template "setup.tmpl" .}}

      {{ if .ParamExists "dr-server/install-drpid" }}
      DRPID={{ regexFind "[a-zA-Z0-9-]+" (.Param "dr-server/install-drpid") }}

      echo "looking for endpoint $DRPID"
      if drpcli endpoints exists $DRPID > /dev/null 2>/dev/null; then

        if drpcli -u $DRPID workflows exists "cloud-decommission" > /dev/null 2> /dev/null ; then
  
          # get machines on local endpoint
          echo "Collecting machines on site $DRPID"
          UUIDS=$(drpcli machines list Endpoint Eq $DRPID Name Ne {{ .Param "dr-server/install-drpid" }} | jq -r '.[].Uuid')
          for uuid in $UUIDS; do
            if drpcli machines get $uuid param "cloud/dmi-hypervisor" > /dev/null ; then
              echo "  $uuid running cloud-decommission"
              drpcli machines workflow $uuid "cloud-decommission" > /dev/null
            else
              echo "  $uuid skipping, no cloud/dmi-hypervisor"
            fi
          done

          echo "Waiting for complete"
          for uuid in $UUIDS; do
            echo "  waiting for $uuid"
            drpcli machines wait $uuid WorkflowComplete true 360  > /dev/null
          done

        else
          echo "Skipping deprovision - workflow does not exist on $DRPID"
        fi

        echo "Destroying Endpoint $DRPID registration"
        drpcli endpoints destroy $DRPID > /dev/null

      else
        echo "No action - endpoint $DRPID is not registered"
      fi

      echo "Removing dr-server/install-drpid Param"
      if drpcli machines meta get $RS_UUID "dr-server/install-drpid" > /dev/null 2> /dev/null; then
        drpcli machines meta set $RS_UUID key "dr-server/install-drpid" to $DRPID > /dev/null
      else
        drpcli machines meta add $RS_UUID key "dr-server/install-drpid" to $DRPID > /dev/null
      fi
      drpcli machines remove $RS_UUID param "dr-server/install-drpid" > /dev/null

      echo "done"
      exit 0

      {{ else }}
      echo "ERROR: no dr-server/install-drpid defined!  Cannot destroy Endpoint"
      exit 1
      {{ end }}
    Name: "drp-endpoint-destroy"
Meta:
  icon: "erase"
  color: "orange"
  title: "RackN Content"
  feature-flags: "sane-exit-codes"
