{{ if .ParamExists "cloud/provider" }}

{{ if eq "linode" (.Param "cloud/provider") }}
# Configure the Linode provider
provider "linode" {
  token = "{{ .Param "linode/token" }}"
}

resource "linode_instance" "drp_node" {
	image     = "{{ .Param "linode/instance-image" }}"
	label     = "{{ .Machine.Name }}"
	region    = "{{ .Param "linode/region" -}}"
	type      = "{{ .Param "linode/instance-type" }}"
	root_pass = "{{ .Param "linode/root-password" }}"
	tags      = [ {{ range $i, $p := .Machine.Profiles }}"{{$p}}",{{ end }}"DigitalRebar" ]
	{{ if .ParamExists "rsa/key-public" }}
	authorized_keys = ["{{ .Param "rsa/key-public" }}"]
	{{ end }}
}

output "machine_ip" {
	value       = linode_instance.drp_node.ip_address
	description = "The IP of Machine"
}

output "instance_id" {
	value       = linode_instance.drp_node.id
	description = "Linode Instance ID"
}

{{ end }}

{{ if eq "aws" (.Param "cloud/provider") }}
provider "aws" {
  region = "{{ .Param "aws/region" }}"
  access_key = "{{ .Param "aws/access-key-id" }}"
  secret_key = "{{ .Param "aws/secret-key" }}"
}

{{ if .ParamExists "rsa/key-public" }}
resource "aws_key_pair" "DRP-{{ .Machine.Uuid }}" {
  key_name   = "DRP-{{ .Machine.Uuid }}"
  public_key = "{{ .Param "rsa/key-public" }}"
}
{{ end }}

{{ if .ParamExists "aws/security-groups" }}
# using predefined security groups
{{ else }}
resource "aws_security_group" "digitalrebar_basic" {

	name_prefix 	= "drp_"
	description		= "Digital Rebar Cloud Wrapper"
	ingress {
		description = "SSH"
		from_port   = 22
		to_port     = 22
		protocol    = "tcp"
		cidr_blocks = ["0.0.0.0/0"]
	}
	ingress {
		description = "HTTPS"
		from_port   = 443
		to_port     = 443
		protocol    = "tcp"
		cidr_blocks = ["0.0.0.0/0"]
	}
	egress {
		from_port   = 0
		to_port     = 0
		protocol    = "-1"
		cidr_blocks = ["0.0.0.0/0"]
	}
	tags = {
		Name = "digitalrebar"
	}
}
{{ end }}

resource "aws_instance" "drp_node" {
	ami           	= "{{ .Param "aws/ami-id" }}"
	instance_type 	= "{{ .Param "aws/instance-type" }}"
	tags      		= {
		Name 		= "{{ .Machine.Name }}"
		DRP_ID		= "{{ .Machine.Uuid }}"
		Provisoner	= "DigitalRebar"
	{{ range $i, $p := .Machine.Profiles }}
		{{$p}}		= "DRP-Profile{{$i}}"
	{{- end }} }
	{{ if .ParamExists "rsa/key-public" -}}
	key_name 		= "DRP-{{ .Machine.Uuid }}"
	{{- end }}
	{{ if .ParamExists "aws/security-groups" }}
	security_groups = [{{ range $i, $p := (.Param "aws/security-groups") }}"{{$p}}",{{ end }}]
	{{ else }}
	security_groups = [aws_security_group.digitalrebar_basic.name]
	{{ end }}
}

output "machine_ip" {
	value       = aws_instance.drp_node.public_ip
	description = "The IP of Machine"
}

{{ end }}

{{ if eq "google" (.Param "cloud/provider") }}
provider "google" {
	credentials  = <<EOF
        {{ .ParamAsJSON "google/credential" }}
        EOF
	project      = "{{ .Param "google/project-id" }}"
  	region       = "{{ .Param "google/region" }}"
}

resource "google_compute_instance" "drp_node" {
    name         = "{{ .Machine.Name }}"
    {{ if (contains "." .Machine.Name) }}
    hostname     = "{{ .Machine.Name }}"
    {{ end }}
    zone         = "{{ .Param "google/zone" }}"
    machine_type = "{{ .Param "google/instance-type" }}"
    tags         = [ {{ range $i, $p := .Machine.Profiles }}"{{$p}}",{{ end }}"digitalrebar" ]
    boot_disk {
        initialize_params {
          image = "{{ .Param "google/boot-disk-image" }}"
        }
    }
    {{ if .ParamExists "rsa/key-public" -}}
    metadata = {
        ssh-keys = "{{ .Param "rsa/key-user" }}:{{ .Param "rsa/key-public" }}"
    }
    {{ end }}
    network_interface {
        network = "default"
        access_config {
          // Ephemeral IP
        }
    }
}

output "machine_ip" {
	value       = google_compute_instance.drp_node.network_interface.0.access_config.0.nat_ip
	description = "The IP of Machine"
}

{{ end }}

{{ else }}
# NO PLAN: Missing cloud/provder
{{ end }}
