# Configure the AWS provider
terraform {
  required_providers {
    aws = {
      source = "hashicorp/aws"
      version = ">= 3.50.0"
    }
  }
}
provider "aws" {
  region = "{{ .Param "aws/region" }}"
  access_key = "{{ .Param "aws/access-key-id" }}"
  secret_key = "{{ .Param "aws/secret-key" }}"
}

# this is handy, but NOT required.  Ansible is not used in default process
{{ if .ParamExists "rsa/key-public" }}
resource "aws_key_pair" "DRP-{{ .Machine.Uuid }}" {
  key_name   = "DRP-{{ .Machine.Uuid }}"
  public_key = "{{ .Param "rsa/key-public" }}"
}
{{ end }}

{{ if .ParamExists "aws/security-groups" }}
# using predefined security groups
{{ else }}
resource "aws_security_group" "digitalrebar_basic" {

	name_prefix 	= "drp_"
	description		= "Digital Rebar Cloud Wrapper"
  {{ range $i, $p := (.ComposeParam "network/firewall-ports" | uniq) }}
  {{- $portdef := split "/" $p -}}
	ingress {
		description = "network/firewall-ports[{{$i}}]"
		from_port   = {{$portdef._0}}
		to_port     = {{$portdef._0}}
		protocol    = "{{coalesce $portdef._1 "tcp"}}"
		cidr_blocks = ["0.0.0.0/0"]
	}
  {{ end }}
	egress {
		from_port   = 0
		to_port     = 0
		protocol    = "-1"
		cidr_blocks = ["0.0.0.0/0"]
	}
	tags = {
		Name = "digitalrebar"
	}
}
{{ end }}

resource "aws_instance" "drp_node" {
	{{ if .ParamExists "cluster/profile" }}
	# YES? use the DRP cluster logic to create multiple machines to run in clusters
	count            = "{{ .Param "cloud/cluster-count" }}"
	{{ end }}
	ami           	= "{{ .Param "aws/ami-id" }}"
	instance_type 	= "{{ .Param "aws/instance-type" }}"
	tags      		= {
		{{ if .ParamExists "cluster/profile" }}
		# YES? use the DRP cluster logic to create multiple machines to run in clusters
		Name            = "{{ .Param "cluster/profile" }}-\${count.index}"
		{{ else }}
		# NO? then names match the TF instance with the DRP machine
		Name            = "{{ .Machine.Name }}"
		DRP_ID		      = "{{ .Machine.Uuid }}"
		{{ end }}
		DRP_Plan_Machine = "{{ .Machine.Uuid }}"
		Provisoner	= "digitalrebar"
	{{ range $i, $p := .Machine.Profiles }}
		{{lower $p}}		= "DRP-Profile{{$i}}"
	{{- end }} }
	{{ if .ParamExists "rsa/key-public" -}}
	key_name 		= "DRP-{{ .Machine.Uuid }}"
	{{- end }}
	{{ if .ParamExists "aws/security-groups" }}
	security_groups = [{{ range $i, $p := (.Param "aws/security-groups") }}"{{$p}}",{{ end }}]
	{{ else }}
	security_groups = [aws_security_group.digitalrebar_basic.name]
	{{ end }}
	user_data = <<-EOT
  	#!/bin/bash
    curl -kfsSL {{.ApiURL}}/machines/join-up.sh | sudo bash --
  EOT

  # this template synchronizes the Terraform instance with Digital Rebar
  {{template "cloud-provision-local-exec.tf.tmpl" . }}
}