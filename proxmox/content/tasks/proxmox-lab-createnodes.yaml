---
Name: proxmox-lab-createnodes
Description: Set up the lab virtual machine nodes.
Documentation: |
  Set up the proxmox based lab virtual machines.

Meta:
  color: blue
  feature-flags: sane-exit-codes
  icon: shopping cart
  title: RackN Content
OptionalParams: []
Prerequisites: []
RequiredParams:
  - "proxmox/lab-student-count"
  - "proxmox/lab-student-vms"
Templates:
  - Contents: |-
      #!/usr/bin/env bash
      # Proxmox Lab setup virtual machines

      {{ template "setup.tmpl" . }}

      set -e
      PVENODE=$(hostname)
      TAG={{ .Param "proxmox/lab-base-tag" }}
      BASE="br-${TAG}-"
      ISO_URL="http://isoredirect.centos.org/centos/8/isos/x86_64/CentOS-8.1.1911-x86_64-dvd1.iso"
      ISO="$(basename $ISO_URL)"
      SCOUNT={{ .Param "proxmox/lab-student-count" }}
      TCOUNT={{ .Param "proxmox/lab-student-vms" }}
      # DRP
      D_BOOT={{ .Param "proxmox/lab-drp-boot-order" }}
      D_CORES={{ .Param "proxmox/lab-drp-cores" }}
      D_MEMORY={{ .Param "proxmox/lab-drp-memory" }}
      D_BRIDGE={{ .Param "proxmox/lab-drp-external-bridge" }}
      D_DISK={{ .Param "proxmox/lab-drp-disk" }}
      D_XTRA={{ .Param "proxmox/lab-pvesh-extra-config-drp" }}
      # machines
      M_BOOT={{ .Param "proxmox/lab-machines-boot-order" }}
      M_CORES={{ .Param "proxmox/lab-machines-cores" }}
      M_MEMORY={{ .Param "proxmox/lab-machines-memory" }}
      M_DISK={{ .Param "proxmox/lab-machines-disk" }}
      M_XTRA={{ .Param "proxmox/lab-pvesh-extra-config-machines" }}

      ### TODO: Make these params
      # NIC one of: e1000 e1000-82540em e1000-82544gc e1000-82545em i82551 i82557b i82559er ne2k_isa ne2k_pci pcnet rtl8139 virtio vmxnet3
      # SCSI one of: lsi lsi53c810 megasas pvscsi virtio-scsi-pci virtio-scsi-single
      # DRP
      D_NIC_TYPE="e1000"
      D_SCSI_TYPE="megasas"
      # Machine - uses "sata" disk type, not SCSI
      M_NIC_TYPE="e1000"

      ############# skip for now
      # Download CentOS-8 ISO if it's not already downloaded in the home directory
      #if [[ -f /root/$ISO ]]
      #then
      #  echo "Cached ISO file exists, skipping download ('$ISO')..."
      #else
      #  echo "Cached ISO file DOES NOT exist, getting it now ('$ISO')..."
      #  wget -p $ISO_URL -O /root/$ISO
      #fi

      # Upload the CentOS-8 ISO to the proxmox ISO storage local repo unless it's already there
      #if $(pvesh get /nodes/${PVENODE}/storage/local/content --output-format json | jq -r '.[] | .volid' | grep "$ISO" > /dev/null)
      #then
      #  echo "ISO found, skipping create ('$ISO').."
      #else
      #  pvesh create /nodes/${PVENODE}/storage/local/upload --filename $ISO --content iso --tmpfilename /root/$ISO
      #fi

      destroy_if_exists() {
        local _vmid=$1
        if pvesh get /nodes/${PVENODE}/qemu/${_vmid}/status/current
        then
          echo "Virtual Machine with ID '$_vmid' exists and being destroyed now..."
          pvesh create /nodes/${PVENODE}/qemu/${_vmid}/status/stop
          pvesh delete /nodes/${PVENODE}/qemu/${_vmid}
        else
          echo "Virtual Machine with ID '$_vmid' is safe to create..."
        fi
      }

      for SNUM in $(seq $SCOUNT)
      do
        VMID=${SNUM}00
        FNUM=$(/usr/bin/printf "%02i" $(echo $SNUM | sed 's/^0*//g'))
        FNODE=$(/usr/bin/printf "%02i" $(echo ${PVENODE:(-2)} | sed 's/^0*//g'))
        BRIDGE=${BASE}${SNUM}
        # Create student management node
        destroy_if_exists $VMID
        LOG=$(mktemp /tmp/pvesh-create-$VMID-XXXXXXXXX.log)
        echo "CREATE drp with ID $VMID at $(date)" > $LOG
        set -x
        pvesh create /nodes/${PVENODE}/qemu --vmid ${VMID} --boot $D_BOOT --cpu host --cores $D_CORES --memory $D_MEMORY --net0 ${D_NIC_TYPE},bridge=${D_BRIDGE},firewall=0,macaddr=00:00:00:${FNODE}:${FNUM}:00 --net1 ${D_NIC_TYPE},bridge=${BRIDGE} --ostype l26 --scsihw $D_SCSI_TYPE --scsi0 local-lvm:$D_DISK $D_XTRA > $LOG 2>&1 &
        set +x
        #pvesh create /nodes/${PVENODE}/qemu --vmid ${VMID} --boot $D_BOOT --cpu host --cores $D_CORES --memory $D_MEMORY --net0 ${NIC_TYPE},bridge=${D_BRIDGE},firewall=0 --net1 ${NIC_TYPE},bridge=${BRIDGE} --ostype l26 --scsihw $SCSI_TYPE --scsi0 local-lvm:$D_DISK --ide2 local:iso/${ISO},media=cdrom $D_XTRA > $LOG 2>&1 &
        START="$START $VMID"

        for TNUM in $(seq $TCOUNT)
        do
          # Create student target nodes
          FNUM=$(/usr/bin/printf "%02i" $(echo $TNUM | sed 's/^0*//g'))
          VMID=${SNUM}${FNUM}
          BRIDGE=${BASE}${SNUM}
          destroy_if_exists $VMID
          LOG=$(mktemp /tmp/pvesh-create-$VMID-XXXXXXXXX.log)
          LOGS="$LOGS $LOG"
          echo "CREATE machine with ID $VMID at $(date)" > $LOG
          set -x
          pvesh create /nodes/${PVENODE}/qemu --vmid ${VMID} --boot $M_BOOT --cpu host --cores $M_CORES --memory $M_MEMORY --net0 ${M_NIC_TYPE},bridge=${BRIDGE},firewall=0,macaddr=00:00:00:00:00:$FNUM --ostype l26 --sata0 local-lvm:$M_DISK $M_XTRA > $LOG 2>&1 &
          set +x
        done

      done

      wait
      for VMID in $START
      do
        echo "Starting virtual machine '$VMID'..."
        pvesh create /nodes/${PVENODE}/qemu/${VMID}/status/start
      done

      echo "CREATE LOGS..."
      for L in $LOGS
      do
        echo "------------------------------------------------------------------------------------------"
        cat $L
        echo "------------------------------------------------------------------------------------------"
      done

    ID: ""
    Link: ""
    Meta: {}
    Name: "proxmox-lab-createnodes"
    Path: ""
