---
Name: proxmox-generate-ssh-key
Description: "Generate an SSH Key to distribute for authenticating SSH connections."
Documentation: |
  This is a very opinionated and quick SSH Key generation task.  It will
  build ``ed25519`` elyptical curve Public and Private key halves.

  The keys will be stored on the the profile specified by the Param ``proxmox/data-profile``.

  Once the lab is built, the operator can retrieve the Private Key half and use that in
  their ``ssh-agent``, or as an ``ssh -i keyfile ...`` command line argument.

  .. warning:: This task will overwrite the Param values, possibly losing the keys.

ExtraClaims:
  - scope: "profiles"
    action: "*"
    specific: "*"
Meta:
  color: blue
  feature-flags: sane-exit-codes
  icon: expand arrows alternate
  title: RackN Content
OptionalParams: []
Prerequisites: []
Templates:
  - Name: "proxmox-generate-ssh-key"
    Contents: |-
      #!/usr/bin/env bash
      # Proxmox Lab setup virtual machines

      {{ template "setup.tmpl" . }}

      set -e
      set -x

      PROF='{{.Param "proxmox/data-profile"}}'
      [[ "$PROF" == "" || "$PROF" == "null" ]] && xiterr 1 "Required 'proxmox/data-profile' value is not set." || true

      PRIV=$(mktemp -u ssh-lab-key-XXXXXX)
      RAND=$(echo "$PRIV" | awk -F"-" ' { print $NF } ')
      PUB=${PRIV}.pub
      ssh-keygen -t ed25519 -C "generated-lab-key-$RAND" -N "" -P "" -f $PRIV

      # make sure our profile exists, if not, create it
      drpcli profiles exists "$PROF" || drpcli profiles create '{"Name": "'$PROF'"}'

      PUB_PARAM="proxmox/lab-drp-sshkey-public"
      PRIV_PARAM="proxmox/lab-drp-sshkey-private"
      PRIV_TMP=$(mktemp -u ssh-lab-priv-temp-XXXXXX)

      CUR_PUB=$(drpcli profiles params "$PROF" | jq -r '."'$PUB_PARAM'"' || true)
      CUR_PRIV=$(drpcli profiles params "$PROF" | jq -r '."'$PRIV_PARAM'"' || true)
      drpcli profiles params "$PROF" | jq -r '."'$PRIV_PARAM'"' > $PRIV_TMP || true
      # make backups just in case
      if [[ "$CUR_PUB" != "" && "$CUR_PUB" != "null" ]]
      then
        drpcli profiles remove "$PROF" param "BACKUP-$PUB_PARAM" > /dev/null 2>&1 || true
        drpcli profiles remove "$PROF" param "$PUB_PARAM" > /dev/null 2>&1 || true
        drpcli profiles add "$PROF" param "BACKUP-$PUB_PARAM" to <<< echo "$CUR_PUB"
      fi

      if [[ "$CUR_PRIV" != "" && "$CUR_PRIV" != "null" ]]
      then
        drpcli profiles remove "$PROF" param "BACKUP-$PRIV_PARAM" > /dev/null 2>&1 || true
        drpcli profiles remove "$PROF" param "$PRIV_PARAM" > /dev/null 2>&1 || true
        drpcli profiles add "$PROF" param "BACKUP-$PRIV_PARAM" to <<< cat "$PRIV_TMP"
      fi

      drpcli profiles add "$PROF" param $PRIV_PARAM to <<< cat "$PRIV"
      drpcli profiles add "$PROF" param $PUB_PARAM to <<< cat "$PUB"

      echo "Copying keyfiles in to /root/.ssh of system..."
      cp -f $PRIV /root/.ssh/ && chmod 600 /root/.ssh/$PRIV
      cp -f $PUB /root/.ssh/ && chmod 600 /root/.ssh/$PUB
      echo "Appending public key half to authorized_keys..."
      cat /root/.ssh/$PUB >> /root/.ssh/authorized_keys
      echo "Removing generated key files..."
      rm -f $PRIV $PUB $PRIV_TMP

      set +x

