---
Name: network-convert-interface-to-bridge
Description: Converts the Boot interface to Bridge enslaved device.
Documentation: |
  This task converts the systems Boot Interface to an bridge
  enslaved connection.

  The DRP Endpoint VMs attach to the Bridge, and they will obtain an
  IP address either from DCHP or Static IP assignment from the same
  Layer 3 network that the Hypervisor utilizes.

  The template defined in the Param ``network-convert-interface-to-bridge-template``
  will be expanded in place in this script then rendered to the Hypervisor.  This
  allows for in the field custom configurations that may not have been encompassed
  in the default Template configuration of this content pack.

Meta:
  color: blue
  feature-flags: sane-exit-codes
  icon: shopping cart
  title: RackN Content
OptionalParams: []
Prerequisites: []
Templates:
  - Name: "network-convert-interface-to-bridge.sh.tmpl"
    Contents: |-
      #!/usr/bin/env bash
      # Convert interface to bridge enslaved connection

      {{ template "setup.tmpl" . }}

      #MAC=$(drpcli machines get $RS_UUID param last-boot-macaddr | jq -r '.' | sed -e 's/^01-//' -e 's/-/:/g')
      MAC=$(echo '{{.Param "last-boot-macaddr"}}' | sed -e 's/^01-//' -e 's/-/:/g')
      PRE="Interface with MAC ('$MAC')"
      TMPL='{{ .Param "network-convert-interface-to-bridge-template" }}'
      {{$tmpl := (printf "%s" (.Param "network-convert-interface-to-bridge-template")) -}}
      BRIDGE='{{ .Param "proxmox/lab-drp-external-bridge" }}'

      # we must have zero from this, which indicates we are not enslaved already'
      ENS=$(ip -j address show | jq -r ".[] | select(.address==\"$MAC\") | select(.master==\"$BRIDGE\") | .ifname" | wc -l)
      [[ "$ENS" != 0 ]] && xiterr 1 "$PRE is already enslaved. Failing." || echo ">>> $PRE is not yet enslaved."

      # we must have one from this
      INTERFACE=$(ip -j address show | jq -r ".[] | select(.address==\"$MAC\") | .ifname")
      NUM=$(echo "$INTERFACE" | wc -l)
      [[ "$NUM" != 1 ]] && xiterr 1 "$PRE configured more than once." || echo ">>> $PRE only found once"

      echo "Selecting interface '$INTERFACE' to enslave on Bridge '$BRIDGE'"

      mkdir -p /etc/network/interfaces.d

      echo "Commenting out interface '$INTERFACE' definitions in /etc/network/interfaces"
      echo "NOTE: this is bad - if interface has a more complex or Static IP config, this may fail"
      sed -i.bak "s/^\(.*${INTERFACE}.*$\)/#\1/g" /etc/network/interfaces

      echo ""
      echo "Building bridge interface configuration for '$BRIDGE'"
      echo "Setting up Converted bridge with the following characteristics:"
      echo "---------------------------------------------------------------"
      echo "Bridge interface name:            $BRIDGE"
      echo "Enslaving physical interface:     $INTERFACE"
      echo "Assigning IP Address to bridge:   $ADDRESS"
      echo "Using Template for interface cfg: $TMPL"

      cat <<EOBR > /etc/network/interfaces.d/$BRIDGE
      {{.CallTemplate $tmpl .}}

      EOBR

      # since we're changing multipl NICs we need a full restart ... hopefully
      # you defined things correctly for the new setup !!
      brctl show $BRIDGE > /dev/null 2>&1 && echo "Bridge '$BRIDGE' exists already" || brctl addbr $BRIDGE
      #ifdown $BRIDGE || true
      #ifup $BRIDGE
      systemctl restart networking.service

