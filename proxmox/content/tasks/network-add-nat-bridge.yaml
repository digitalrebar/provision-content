---
Name: network-add-nat-bridge
Description: Add a NAT bridge to connect VMs.
Documentation: |
  This task creates a NAT bridge that will be attached to the
  ``proxmox/lab-drp-external-bridge`` defined bridge.

  The NAT bridge will Masquerade for ``proxmox/lab-nat-subnet``.

  The template defined in the Param ``network-add-nat-bridge-template`` will be
  expanded in place in this script then rendered to the Hypervisor.  This allows
  for in the field custom configurations that may not have been encompassed in
  the default Template configuration of this content pack.

  .. warning::  This method appears to not correctly NAT Masquerade traffic correctly.
                Verify the DRP Endpoints have external network connectivity with this
                method before relying on it.  The post-up/down settings may need to be
                adjusted.

Meta:
  color: blue
  feature-flags: sane-exit-codes
  icon: shopping cart
  title: RackN Content
OptionalParams: []
Prerequisites: []
Templates:
  - Name: "network-add-nat-bridge.sh.tmpl"
    Contents: |-
      #!/usr/bin/env bash
      # Create NAT type bridge and set NAT Masquerading on it

      {{ template "setup.tmpl" . }}

      OUTPUT='{{ .Param "proxmox/lab-drp-external-bridge" }}'
      BRIDGE='{{ .Param "proxmox/lab-nat-bridge" }}'
      CIDR='{{ .Param "proxmox/lab-nat-subnet" }}'
      TMPL="{{ .Param "network-add-nat-bridge-template" }}'
      {{$tmpl := (printf "%s" (.Param "network-add-nat-bridge-template")) -}}

      NET=$(echo $CIDR | cut -d "/" -f1)
      PREFIX=$(echo $CIDR | cut -d "/" -f2)
      BASE=$(echo $NET | cut -d"." -f1-3)
      LAST=$(echo $NET | cut -d"." -f4)
      (( OCT = LAST + 1 ))
      IPADDR="${BASE}.${OCT}"
      ADDRESS="${IPADDR}/${PREFIX}"

      mkdir -p /etc/network/interfaces.d
      echo "Setting up NAT bridge with the following characteristics:"
      echo "---------------------------------------------------------"
      echo "NAT bridge:                       $BRIDGE"
      echo "Network Subnet CIDR:              $CIDR"
      echo "Assigning IP Address to bridge:   $ADDRESS"
      echo "Using Template for interface cfg: $TMPL"

      cat <<EOBR > /etc/network/interfaces.d/$BRIDGE
      {{.CallTemplate $tmpl .}}

      EOBR

      brctl show $BRIDGE > /dev/null 2>&1 && echo "Bridge '$BRIDGE' exists already" || brctl addbr $BRIDGE
      ifdown $BRIDGE || true
      ifup $BRIDGE
      #systemctl restart networking.service


