---
Name: govc-vsan-cluster-enable
Description: A task wait for appliance OVA API to become available
Documentation: >-
  This task will enable VSAN on the cluster after create and claim operations.
  The Param ``esxi/vsan-options`` must be set with a value to enable VSAN, if
  desired.  For example:

    * ``-vsan-enabled=true``

  If the Param ``esxi/vsan-enabled`` is set to ``true``, and there is no value
  defined for ``esxi/vsan-options``, then ``esxi/vsan-options`` will be set to
  ``-vsan-enabled=true``.

  If there is no value specified for ``esxi/vsan-options`` AND ``esxi/vsan-enabled``,
  then this task will be skipped without generating an error.

ExtraClaims:
  - scope: machines
    action: '*'
    specific: '*'
  - scope: profiles
    action: '*'
    specific: '*'
Meta:
  color: purple
  feature-flags: sane-exit-codes
  icon: terminal
  title: Digital Rebar Community Content
RequiredParams:
  - esxi/cluster-name
OptionalParams:
  - esxi/datacenter-name
  - esxi/cluster-options
  - esxi/vsan-options
  - esxi/vsan-enabled
Prerequisites: []
Templates:
  - Name: esxi-vsan-cluster-enable.sh
    Path: ''
    Link: ''
    ID: ''
    Contents: |
      #!/usr/bin/env bash
      # Cluster create and enrollment task.
      # RackN Copyright 2020

      ###
      #  NOTICE:  This template relies on the 'esxi/cluster-name' being set
      #           to a cluster name to operate on.  Additionally, each Machine
      #           that belongs in the specified cluster MUST ALSO have the
      #           Param set with the name of the clsuter.
      ###

      ### setup.tmpl
      {{ template "setup.tmpl" . }}

      ### govc-setup.sh.tmpl
      {{ template "govc-setup.sh.tmpl" .}}

      ### begin govc-lib.sh.tmpl
      {{ template "govc-lib.sh.tmpl" . }}

      ### begin esxi-vsan-cluster-enable.sh
      ON='{{ .Param "esxi/vsan-enabled" }}'
      [[ "$ON" == "false" ]] && { echo "VSAN ops disabled ('esxi/vsan-enabled' set to '$VSAN_ENABLED'"; exit 0; }

      ### tec-cluster-create.sh
      JQ=$(which jq)
      [[ -z "$JQ" ]] && JQ=$(which drpjq)    || true
      [[ -z "$JQ" ]] && JQ=$(which drpclijq) || true
      [[ -z "$JQ" ]] && JQ=$(which gojq)     || true
      if [[ -z "$JQ" ]]; then
        D="$(which drpcli)"
        if [[ -n "$D" ]]; then
          ln -s $D /usr/local/bin/drpjq
          JQ="/usr/local/bin/drpjq"
        else
          xiterr 1 "Unable to find 'jq' or alternative to use."
        fi
      fi

      run_govc() {
        local _args="$*"
        echo "CMD: govc $_args"
        govc $_args
      }

      USERNAME="root"

      DC='{{ .Param "esxi/datacenter-name" }}'
      [[ -z "$DC" ]] && xiterr 1 "'esxi/datacenter-name' not specified"

      CLUSTER='{{ .Param "esxi/cluster-name" }}'
      [[ -z "$CLUSTER" ]] && xiterr 1 "'esxi/cluster-name' not specified"

      VSAN_OPTIONS='{{ .Param "esxi/vsan-options" }}'
      if [[ -z "$VSAN_OPTIONS" || "$VSAN_OPTIONS" == "null" ]]
      then
        if [[ "{{ .Param "esxi/vsan-enabled" }}" == "true" ]]
        then
          VSAN_OPTIONS="-vsan-enabled=true"
        else
          echo ">>> 'esxi/vsan-enabled' is empty or false AND no 'esxi/vsan-options' specified"
          echo ">>> SKIPPING any further actions, exiting without error ..."
          exit 0
        fi
      fi

      export GOVC_PERSIST_SESSION=false

      echo "Starting enable VSAN operation with the following information:"
      echo "---------------------------------------------------------"
      echo ""
      echo "  Datacenter:  '$DC'"
      echo "     Cluster:  '$CLUSTER'"
      echo "VSAN Options:  '$VSAN_OPTIONS'"
      echo ""

      export GOVC_DATACENTER="$DC"

      if [[ -n "$CLUSTER" ]]
      then
        # there appears to be no 'cluster.info' to test if exists
        # this is overloading cluster.rule.info but works
        if govc cluster.rule.info -cluster "$CLUSTER" > /dev/null 2>&1
        then
          echo "Cluster '$CLUSTER' exists."
          if [[ -n "$VSAN_OPTIONS" ]]
          then
            run_govc cluster.change $VSAN_OPTIONS "$CLUSTER"
          else
            xiterr 1  "No VSAN options specified in 'esxi/vsan-options'."
          fi
        else
          xiterr 1 "Cluster '$CLUSTER' does not exist.  Unable to enable VSAN."
        fi
        echo "VSAN enable operations have completed."
      else
        echo "NOTICE:  'esxi/cluster-name' was not set, no cluster operations performed."
      fi
