---
Name: "ansible-vmware-object-rename"
Description: "Rename a vSphere object via Ansible Galaxy module"
Documentation: |
  Renames an object in vSphere using the Ansible Galaxy module.  Requires
  setting the Param datastrucute to specific values based on the object you
  are trying to rename.  Documentation can be found at:

    * https://docs.ansible.com/ansible/latest/collections/community/vmware/vmware_object_rename_module.html

ExtraClaims:
  - scope: "machines"
    action: "*"
    specific: "*"
  - scope: "profiles"
    action: "*"
    specific: "*"
Meta:
  icon: "terminal"
  color: "purple"
  title: "Digital Rebar Community Content"
  feature-flags: "sane-exit-codes"
RequiredParams:
  - "esxi/cluster-name"
  - "esxi/dvs-mappings"
OptionalParams: []
Templates:
  - Name: "ansible-vmware-object-rename.sh.tmpl"
    Contents: |
      #!/usr/bin/env bash
      # Generate the Ansible playbook for migrating VMK

      ### setup.tmpl
      {{ template "setup.tmpl" . }}

      ### govc-lib.sh.tmpl
      {{ template "govc-lib.sh.tmpl" .}}

      PLAYBOOK="/tmp/ansible-vmware-migrate-vmk-playbook.yaml"
      VC_HOST={{ .ParamExpand "govc/url" }}
      VC_USER={{ .Param "govc/username" }}
      VC_PASS={{ .Param "govc/password" }}
      VAL={{ if eq (.Param "govc/insecure") true -}}no{{ else }}yes{{ end }}

      {{ if .ParamExists "esxi/object-rename-override" -}}
      OVER="{{ .ParamExpand "esxi/object-rename-override" }}"
      OVER_MSG="Overriding 'new_name' since 'esxi/object-rename-override' is set (to '$NEW_NAME')."
      {{ end -}}

      {{ range $obj := (.Param "esxi/object-rename") -}}
      NEW_NAME="" OBJECT="" OBJ_NAME="" OBJ_TYPE=""

      echo "Starting rename operation for '{{ $obj }}'"

      if [[ -z "$OVER" ]]
      then
        NEW_NAME="{{ $obj.new_name }}"
      else
        echo "$OVER_MSG"
        NEW_NAME="$OVER"
      fi

      OBJECT="{{ if $obj.object.name }}object_name: {{ $obj.object_name }}{{ else }}object_moid: {{ $obj.object_moid }}{{ end }}"
      OBJ_NAME="$(echo $OBJECT | awk ' { print $NF }')"
      OBJ_TYPE="{{ $obj.object_type }}"

      echo "Writing header for playbook YAML..."
      cat <<EOHDR > $PLAYBOOK
      ---
      - hosts: localhost
        gather_facts: false
        tasks:
      EOHDR

      for MEM in $MEMBERS
      do
      echo "WRITING migration playbook task for member '$MEM'"
      cat <<EOPB >> $PLAYBOOK
        - name: Rename object $OBJ_NAME to $NEW_NAME
          delegate_to: localhost
          community.vmware.vmware_object_rename:
            hostname: $VC_HOST
            username: $VC_USER
            password: $VC_PASS
            new_name: $NEW_NAME
            $OBJECT
            object_type: $OBJ_TYPE
            validate_certs: $VAL
      EOPB
      done
      {{ end -}}

      if [[ -r "$PLAYBOOK" ]]
      then
        export ANSIBLE_FORCE_COLOR=0

        echo ""
        echo "generated playbook:"
        echo "=================================== BEGIN ==================================="
        cat $PLAYBOOK
        echo "==================================== END ===================================="
        echo ""

        ansible-playbook $PLAYBOOK --connection=local -e 'ansible_python_interpreter=/usr/bin/python3'
      else
        echo "WARNING: No playbook file was generated to execute. ('$PLAYBOOK')"
      fi

