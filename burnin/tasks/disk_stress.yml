---
Name: "disk_stress"
Description: "DISK Stress Test"
RequiredParams:
- "burnin-disk-test-ssd"
- "burnin-disk-destructive"
- "burnin-skip"
Meta:
  type: "build"
  color: "blue"
  icon: "fire"
  title: "RackN Content"
  feature-flags: "sane-exit-codes"
Templates:
- Name: "disk_stress.sh"
  Contents: |
    #!/bin/bash

    {{ template "setup.tmpl" . }}

    {{ if .Param "burnin-skip" }}
    echo "Burnin has already run - skipping DISK Stress Test"
    exit 0
    {{ end }}

    echo "Starting disk stress test"
    TEST_SSDS={{.Param "burnin-disk-test-ssd"}}
    DESTRUCTIVE={{.Param "burnin-disk-destructive"}}
    BBARGS="-s -v -b 4096 -c 4096"
    if [[ $DESTRUCTIVE = true ]]; then
        # Nuke it all.
        declare vg pv maj min blocks name
        # Make sure that the kernel knows about all the partitions
        for bd in /sys/block/sd*; do
            [[ -b /dev/${bd##*/} ]] || continue
            partprobe "/dev/${bd##*/}" || :
        done
        # Zap any volume groups that may be lying around.
        vgscan --ignorelockingfailure -P
        while read vg; do
            vgremove -f "$vg"
        done < <(vgs --noheadings -o vg_name)
        # Wipe out any LVM metadata that the kernel may have detected.
        pvscan --ignorelockingfailure
        while read pv; do
            pvremove -f -y "$pv"
        done < <(pvs --noheadings -o pv_name)
        # Now zap any partitions along with any RAID metadata that may exist.
        while read maj min blocks name; do
            [[ -b /dev/$name && -w /dev/$name && $name != name ]] || continue
            [[ $name = loop* ]] && continue
            [[ $name = dm* ]] && continue
            mdadm --misc --zero-superblock --force /dev/$name
            if (( blocks >= 2048)); then
                dd "if=/dev/zero" "of=/dev/$name" "bs=512" "count=2048"
                dd "if=/dev/zero" "of=/dev/$name" "bs=512" "count=2048" "seek=$(($blocks - 2048))"
            else
                dd "if=/dev/zero" "of=/dev/$name" "bs=512" "count=$blocks"
            fi
        done < <(tac /proc/partitions)
    fi

    # Get disks
    for i in /sys/block/*; do
        grep -q '/virtual/' < <(readlink "$i") && continue
        # Skip CD/DVD/...
        grep -q '/sr[0-9]' < <(readlink "$i") && continue
        echo "Performing badblock test on $i"
        (
            if [[ $(cat "$i/queue/rotational") == 0 && $TEST_SSDS = false ]]; then
                :;
            else
                if [[ $DESTRUCTIVE = true ]]; then
                    BBARGS+=" -w -f"
                else
                    BBARGS+=" -n -f"
                fi
            fi
            if badblocks $BBARGS "/dev/${i##*/}"; then
                echo "passed "
            else
                echo "failed"
            fi > "test-${i##*/}"
            exit
        ) &
    done
    wait
    cat test-*
    grep -q failed test-* && exit 1 || exit 0

