{{if .ParamExists "photon-select-kickstart" -}}
  {{ $selectKickStart := ( printf "%s" ( .Param "photon-select-kickstart" ) ) -}}
  {{ .CallTemplate $selectKickStart .}}
{{ else -}}
{
    "hostname": "{{ .Machine.Name }}",
    "bootmode": "{{ .Param "photon-bootmode" }}",
{{ $net := (printf "photon-network-%s.json.tmpl" (.Param "photon-network-template")) }}{{ .CallTemplate $net .}}
    "password":
        {
            "crypted": true,
            "text": "{{if .ParamExists "provisioner-default-password-hash"}}{{.Param "provisioner-default-password-hash"}}{{else}}$6$drprocksdrprocks$upAIK9ynEEdFmaxJ5j0QRvwmIu2ruJa1A1XB7GZjrnYYXXyNr4qF9FttxMda2j.cmh.TSiLgn4B/7z0iSHkDC1{{end}}"
        },
    "disk": "/dev/{{.Param "operating-system-disk"}}",
{{ $part := (printf "part-scheme-photon-%s.json.tmpl" (.Param "part-scheme-photon")) }}{{ .CallTemplate $part .}}
    "packages": {{ .ParamAsJSON "photon-base-packages" }},
    "additional_packages": {{if .ParamExists "extra-packages" }}{{ .ParamAsJSON "extra-packages" }}{{else}}[]{{end }},
    "postinstall": [
                     "#!/bin/sh",
                     "mkdir /rackn",
                     "curl {{.Machine.Url}}/reset-workflow-runner.sh > /rackn/reset-workflow-runner.sh",
                     "[[ ! -r /rackn/reset-workflow-runner.sh ]] && { echo unreadable; exit 1; }",
                     "cat /rackn/reset-workflow-runner.sh | bash -s --"
                   ],
    "log_level": "info",
    "install_linux_esx": false
}
{{- end }}
