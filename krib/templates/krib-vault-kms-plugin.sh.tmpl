#!/usr/bin/env bash
# This script installs vault, but doesn't configure it

set -e

# Get access and who we are.
{{template "setup.tmpl" .}}

# Skip the remainder of this template if this host is not a master in a selective-master deployment
{{template "krib-skip-if-not-master.tmpl" .}}

# these need to be before krib-lib template
{{if .ParamExists "krib/cluster-profile" -}}
CLUSTER_PROFILE={{.Param "krib/cluster-profile"}}
PROFILE_TOKEN={{.GenerateProfileToken (.Param "krib/cluster-profile") 7200}}
{{else -}}
xiterr 1 "Missing krib/cluster-profile on the machine!"
{{end -}}
{{template "krib-lib.sh.tmpl" .}}


# Allow for a local repository for installation files
{{if .ParamExists "krib/package-repository" -}}
KRIB_REPO={{.Param "krib/package-repository"}}
{{end -}}

TMP_DIR=/tmp/kms-plugin
INSTALL_DIR=/usr/local/bin
mkdir -p ${TMP_DIR}

echo "Download oracle kubernetes-vault-kms-plugin master.."
if [[ ! -z "$KRIB_REPO" ]] ; then
  download -L ${KRIB_REPO}/kubernetes-vault-kms-plugin_0.0.7_Linux_x86_64.tar.gz -o $TMP_DIR/kubernetes-vault-kms-plugin_0.0.7_Linux_x86_64.tar.gz
else
  download -L https://github.com/funkypenguin/kubernetes-vault-kms-plugin/releases/download/v0.0.7/kubernetes-vault-kms-plugin_0.0.7_Linux_x86_64.tar.gz -o ${TMP_DIR}/kubernetes-vault-kms-plugin_0.0.7_Linux_x86_64.tar.gz
fi


echo "Installing kubernete-vault-kms-plugin..."
tar -C ${INSTALL_DIR} -xzf ${TMP_DIR}/kubernetes-vault-kms-plugin_0.0.7_Linux_x86_64.tar.gz --strip-components=1

# We should secure the encryption.yaml file for root-only read
chmod 600 /etc/kubernetes/pki/encryption.yaml

TOKEN={{ .Param "vault/kms-plugin-token" }}

# Create the plugin config (requires a param for token)
cat <<EOF > /etc/vault/vault-kms-plugin.yaml
keyNames:
  - kube-secret-enc-key
transitPath: /transit
vaultCACert: /etc/vault/pki/server-ca.pem
addr: https://localhost:8200
token: $TOKEN
EOF

# Ensure that /etc/kubernetes/pki/vault-kms-plugin/ exists and is writeable by the vault user
mkdir -p /etc/kubernetes/pki/vault-kms-plugin
chown vault /etc/kubernetes/pki/vault-kms-plugin

systemctl daemon-reload
systemctl enable vault-kms-plugin
systemctl restart vault-kms-plugin
systemctl status vault-kms-plugin

exit 0
