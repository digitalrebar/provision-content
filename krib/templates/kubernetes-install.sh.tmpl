#!/usr/bin/env bash
# Kubernetes and Kubeadm Install Content
set -e

# Get access and who we are.
{{template "setup.tmpl" .}}
[[ $RS_UUID ]] && export RS_UUID="{{.Machine.UUID}}"

CLUSTER_NAME={{.Param "krib/cluster-name"}}
{{if .ParamExists "krib/cluster-profile" -}}
CLUSTER_PROFILE={{.Param "krib/cluster-profile"}}
PROFILE_TOKEN={{.GenerateProfileToken (.Param "krib/cluster-profile") 7200}}
{{else -}}
xiterr 1 "Missing krib/cluster-profile on the machine!"
{{end -}}

{{template "krib-lib.sh.tmpl" .}}

CNI_VERSION="{{ .Param "krib/cluster-cni-version" }}"
CRICTL_VERSION="{{ .Param "krib/cluster-crictl-version" }}"
RELEASE="{{ .Param "krib/cluster-kubernetes-version" }}"

TMP_DIR=/tmp/k8s-tmp
INSTALL_DIR=/usr/bin

echo "Install prerequisite: socat"
case $OS_FAMILY in
  debian)
    if ! which socat ; then
      install socat
    fi
    ;;
  rhel)
    # Fix kernel config ref for kubeadm if missing
    if [[ ! -e /boot/config-$(uname -r) ]] ; then
      yum install -y kernel-devel
      config_file=$(find /usr/src/kernels -type f | grep "\/\.config" | tail -1)
      ln -s $config_file /boot/config-$(uname -r)
    fi

    # Required for Kubernetes 1.18+
    yum install -y conntrack-tools

    if ! which socat ; then
      install socat
    fi

    # Fix hostname lookup
    echo "{{.Machine.Address}} $(hostname -s) $(hostname)" >> /etc/hosts

    if sestatus | grep -q disabled ; then
        echo "SELinux already disabled"
    else
        setenforce 0
    fi
    ;;
  coreos)
    # Fix hostname lookup
    echo "{{.Machine.Address}} $(hostname -s) $(hostname)" >> /etc/hosts

    INSTALL_DIR=/opt/bin
    ;;
esac

mkdir -p ${TMP_DIR}
mkdir -p ${INSTALL_DIR}
mkdir -p /opt/cni/bin

# Allow for a local repository for installation files
{{if .ParamExists "krib/package-repository" -}}
KRIB_REPO={{.Param "krib/package-repository"}}
{{end -}}

echo "Download cni plugin version: ${CNI_VERSION}"
if [[ ! -z "$KRIB_REPO" ]] ; then
  download -L "${KRIB_REPO}/cni-plugins-linux-amd64-${CNI_VERSION}.tgz" -o ${TMP_DIR}/cni-plugins-amd64-${CNI_VERSION}.tgz
else
  download -L "https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-linux-amd64-${CNI_VERSION}.tgz" -o ${TMP_DIR}/cni-plugins-amd64-${CNI_VERSION}.tgz
fi
echo "Install cni plugin version: ${CNI_VERSION}"
tar -C /opt/cni/bin -xzf ${TMP_DIR}/cni-plugins-amd64-${CNI_VERSION}.tgz

echo "Download crictl version: ${CRICTL_VERSION}"
if [[ ! -z "$KRIB_REPO" ]] ; then
  download -L "${KRIB_REPO}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz" -o ${TMP_DIR}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz
else
  download -L "https://github.com/kubernetes-incubator/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz" -o ${TMP_DIR}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz
fi
echo "Install crictl version: ${CRICTL_VERSION}"
tar -C ${INSTALL_DIR} -xzf ${TMP_DIR}/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz

cd ${INSTALL_DIR}
echo "Download kubelet, kubeadm, and kubectl version: ${RELEASE}"
if [[ ! -z "$KRIB_REPO" ]] ; then
  download -L --remote-name-all "${KRIB_REPO}/{kubeadm,kubelet,kubectl}"
else
  download -L --remote-name-all https://storage.googleapis.com/kubernetes-release/release/${RELEASE}/bin/linux/amd64/{kubeadm,kubelet,kubectl}
fi
chmod +x {kubeadm,kubelet,kubectl}

echo "Download kubelet systemd service unit file for version: ${RELEASE}"
download -L "https://raw.githubusercontent.com/kubernetes/kubernetes/${RELEASE}/build/debs/kubelet.service" -o /etc/systemd/system/kubelet.service
sed -i "s:/usr/bin:$INSTALL_DIR:g" /etc/systemd/system/kubelet.service

mkdir -p /etc/systemd/system/kubelet.service.d
echo "Download kubelet systemd service extension unit file for version: ${RELEASE}"
download -L "https://raw.githubusercontent.com/kubernetes/kubernetes/${RELEASE}/build/debs/10-kubeadm.conf" -o /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
sed -i "s:/usr/bin:$INSTALL_DIR:g" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

systemctl enable kubelet && systemctl start kubelet

rm -rf ${TMP_DIR}

echo "Finished successfully"
exit 0
