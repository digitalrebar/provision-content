Overview
--------

The image builder content pack allows an operator to create a workflow
to build a **gold master** system and to capture a filesystem tarball image
of that system as a single artifact image.  The image is suitable for
deployment to new systems via the ``image-deploy`` plugin.

In addition, the tools used in this content pack to capture an image of a
workflow built image should also be sufficient to capture so called *brown
field* images.  This would allow an operator to essentially "cut-n-paste"
copies of existing servers in their operational environment.

Currently, the Image Builder content only supports Linux type systems.  If you
wish to build Microsoft Windows images, please consider using a different tool
like Hashicorp's Packer.

The Process
===========

The basic process that this content pack employs is as follows:

  * create a workflow to build a new machine "gold image" from scratch
  * use stages to customize the contents/configuration of your image
  * capture the image as a filesystem tarball, and compress it
  * stage the image to the DRP Endpoint in the ``files`` space for deployment

The process is relatively opinionated in some aspects (repo management, installation
of ``cloud-init`` for image deployment customizations, etc.).

**It is entirely likely that you may need to customize either the Stages or specific
tasks attached to the Stages to meet your use case requirements.**

Tutorial Videos
===============

The following tutorial videos have been made that outline and show the use of this
content pack in conjunction with the ``image-deploy`` plugin.

  * `Red Hat Enterprise Linux 7.7 <https://youtu.be/KN0oF_9DIAM>`_ (RHEL 7.7)
  * `Digital Rebar: Immutable Image Deployment Demo <https://youtu.be/K3P9rFyZSNs>`_ (CentOS)

Uploading Images
================

At the conclusion of the ``image-capture`` task (in the ``image-builder-linux`` stage),
the image will be uploaded to the HTTP fileserver space on the DRP Endpoint.  To successfully
upload the image, the image builder content uses the ``ExtraClaims`` to add additional *scope*
access to the ``files`` API service.  This is used to allow the use of ``drpcli files upload ....``
command to store the image on the DRP Endpoint for use by the ``image-deploy`` plugin.

The use of ``unsafe/rs-username`` and ``unsafe/rs-password`` Params are deprecated.

Using the Image
===============

Once the image build process has been completed, you will need to locate the HTTP file server
URL location for use in the image deploy ``image-deploy/image-url`` Param.  To find the uploaded
URL, review the output of the ``image-capture`` Job Log.  You should find a output similar to:

  ::

    | Image Builder created image information:
    | --------------------------------------------------------------------------------
    |         filename:  /RS_IMAGE/tarball.tgz
    |            ident:  cf99cd80eb
    |             date:  Tue Aug 27 18:44:35 UTC 2019
    |             size:  517036600
    |           md5sum:  1f40ac1bac2eb3ea99cebc38b807c15f
    |   upload tarball:  images/rhel-tarball-20190827-184435-cf99cd80eb.tgz
    |  upload manifest:  images/rhel-MANIFEST-20190827-184435-cf99cd80eb.txt

The relevant piece is the ``images/rhel-tarball-20190827-184435-cf99cd80eb.tgz``.  You can set
the ``image-deploy/image-url`` to:

  * {{ .ProvisionerURL }}/files/images/rhel-tarball-20190827-184435-cf99cd80eb.tgz

Example Image Deploy Profile
++++++++++++++++++++++++++++

Below is an example Profile that could be used to reference an Image Builder built image
for deployment by the ``image-deploy`` plugin.  Note that these values are examples and
will be unique to your built image (YAML format).

  ::

    ---
    Name: "my-image-deploy"
    Meta:
      color: "purple"
      icon: "wizard"
      title: "Built by Image Builder"
    Params:
      image-deploy/image-os: "linux"
      image-deploy/image-type: "tgz"
      image-deploy/image-url: "http://192.168.124.1:8091/files/images/rhel-tarball-20190827-184435-cf99cd80eb.tgz"
      kexec-ok: true

Note that the use of ``kexec-ok: true`` is not required, but often helpful in enabling
extremely rapid image deployment capabilities.


Prerequisites
=============

The image-builder content pack has Prerequisites necessary to operate correctly.  In addition
to any content packs that define/describe BootEnvs and necessary workflow stages (for example
RHEL 7.7 requiers ``os-other``, and use of ``runner-service`` requires ``task-library``).

Please ensure you have the appropriate content packs to support workflows for building images
as desired.  The Preqrequisistes system does not call out content or plugins that are
optional for building your image.
